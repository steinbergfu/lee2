
Created on Tue Nov 28 18:51:11 2023

@author: user
"""

from ibapi.client import EClient
from ibapi.wrapper import EWrapper
from decimal import Decimal, getcontext
from ibapi.utils import decimalMaxString,floatMaxString


class MyWrapper(EWrapper):

    def nextValidId(self, orderId:int):
        print("setting nextValidOrderId: %d", orderId)
        
        self.nextValidOrderId = orderId
        # start program here or use threading
        app.reqContractDetails(4444, contract)

    def contractDetails(self, reqId, contractDetails):
        print(reqId, contractDetails.contract)# my version doesnt use summary

    def contractDetailsEnd(self, reqId):
        print("ContractDetailsEnd. ", reqId)
        # this is the logical end of your program
       # app.disconnect() # delete if threading and you want to stay connected


    def pnlSingle(self, reqId: int, pos: Decimal, dailyPnL: float, unrealizedPnL: float, realizedPnL: float, value: float):
        super().pnlSingle(reqId, pos, dailyPnL, unrealizedPnL, realizedPnL, value)
        print("Daily PnL Single. ReqId:", reqId, "Position:", decimalMaxString(pos),
                  "DailyPnL:", floatMaxString(dailyPnL), "UnrealizedPnL:", floatMaxString(unrealizedPnL),
                  "RealizedPnL:", floatMaxString(realizedPnL), "Value:", floatMaxString(value))
   # def error(self, reqId, errorCode, errorString):
       # print("Error. Id: " , reqId, " Code: " , errorCode , " Msg: " , errorString)

wrapper = MyWrapper()
app = EClient(wrapper)
app.connect("127.0.0.1", 7497, clientId=123)
print("serverVersion:%s connectionTime:%s" % (app.serverVersion(), app.twsConnectionTime()))

from ibapi.contract import Contract

contract = Contract()
contract.symbol = 'DAX'
contract.secType = 'FUT'
contract.exchange = 'Eurex'
contract.currency = 'EUR'
contract.multiplier=1
contract.lastTradeDateOrContractMonth = '202312'

# app.reqPnLSingle(17002, "DU7065203", "", 621358845)
# print()
app.run() # delete this line if threading
app.reqPnLSingle(17002, "DU7065203", "", 621358845)
